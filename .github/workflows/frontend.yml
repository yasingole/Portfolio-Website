name: Deploy Frontend to S3 and Cloudfront Cache Invalidation

on:
  workflow_run:
    workflows: ["Backend Infrastructure Deployment"]
    types:
      - completed

  push:
    branches:
      - master
    paths:
      - Portfolio_website/src/**
  pull_request:
    branches:
      - master
    paths:
      - Portfolio_website/src/**

jobs:
  deploy_and_invalidate_cf_cache:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Set up AWS CLI
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Upload src to S3
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: |
          aws s3 cp Portfolio_website/src/ s3://www.yasingole.co.uk/ --recursive

      - name: Get CloudFront Distribution ID
        id: cloudfront
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[?DomainName=='http://www.yasingole.co.uk.s3-website.eu-west-2.amazonaws.com']].Id" --output text)
          echo "::set-output name=distribution_id::$DISTRIBUTION_ID"

      - name: Debug CloudFront Distribution ID
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: echo "CLOUDFRONT_DISTRIBUTION_ID=${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"

      - name: Create CloudFront Invalidation
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: |
          distributionId="${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"
          aws configure set preview.cloudfront true
          aws cloudfront create-invalidation --distribution-id $distributionId --paths '/*'